#ifndef NOTES_H_
#define NOTES_H_

#include "stdint.h"


#define A3  220
#define B3  246
#define C4  261
#define D4  293
#define E4  329

#define FS4  369
#define G4  392
#define A4  440 //432
#define B4  493

#define CS5  554
#define D5  587

#define FS5  739
#define G5  783



#define VOLUME_MAX 10
#define VOLUME_MIN 0

uint32_t korobeiniki[] = {
	E4, E4, B3, C4,
	D4, C4, B3, A3,
	A3, A3, C4, E4,
	D4, C4, B3, B3,
	B3, C4, D4, E4,
	C4, A3

};

uint32_t korobeiniki_delays[] = {
	50, 50, 100, 100,
	200, 50, 50, 100,
	100, 100, 100, 200,
	100, 100, 50, 50,
	50, 50, 50, 100,
	100, 200

};

uint32_t aang[] = {
	D4, FS4, CS5,
	E4, G4, D5,
	FS4, A4, FS5,
	G4, B4, G5,
	D5, CS5, A4, FS4,
	D5, CS5, A4, FS4,
	D5, CS5, A4, FS4,
	D5, CS5, A4, FS4,
	G4, FS4, D4, B3,
	G4, FS4, D4, B3,
	G4, FS4, D4, B3,
	G4, FS4, D4, B3,
	D5, CS5, A4, FS4,
	D5, CS5, A4, FS4,
	D5, CS5, A4, FS4,
	D5, CS5, A4, FS4,
	G4, FS4, D4, B3,
	G4, FS4, D4, B3,
	G4, FS4, D4, B3,
	G4, FS4, D4, B3
};

uint32_t aang_delays[] = {
	100, 100, 200,
	100, 100, 200,
	100, 100, 200,
	100, 100, 200,
	50, 50, 50, 50,
	50, 50, 50, 50,
	50, 50, 50, 50,
	50, 50, 50, 50,
	50, 50, 50, 50,
	50, 50, 50, 50,
	50, 50, 50, 50,
	50, 50, 50, 50,
	50, 50, 50, 50,
	50, 50, 50, 50,
	50, 50, 50, 50,
	50, 50, 50, 50,
	50, 50, 50, 50,
	50, 50, 50, 50,
	50, 50, 50, 50,
	50, 50, 50, 50
};




//// Взято из примеров проектов на SDK-1.1M
//uint32_t megalovania_melody[] = {
//		N_D3, N_D3, N_D4, N_A3, 0, N_GS3, N_G3, N_F3, N_D3, N_F3, N_G3, N_C3, N_C3, N_D4, N_A3, 0, N_GS3, N_G3, N_F3, N_D3, N_F3, N_G3, N_B2, N_B2, N_D4, N_A3, 0, N_GS3, N_G3, N_F3, N_D3, N_F3, N_G3, N_AS2, N_AS2, N_D4, N_A3, 0, N_GS3, N_G3, N_F3, N_D3, N_F3, N_G3, N_D3, N_D3, N_D4, N_A3, 0, N_GS3, N_G3, N_F3, N_D3, N_F3, N_G3, N_C3, N_C3, N_D4, N_A3, 0, N_GS3, N_G3, N_F3, N_D3, N_F3, N_G3, N_B2, N_B2, N_D4, N_A3, 0, N_GS3, N_G3, N_F3, N_D3, N_F3, N_G3, N_AS2, N_AS2, N_D4, N_A3, 0, N_GS3, N_G3, N_F3, N_D3, N_F3, N_G3, N_D4, N_D4, N_D5, N_A4, 0, N_GS4, N_G4, N_F4, N_D4, N_F4, N_G4, N_C4, N_C4, N_D5, N_A4, 0, N_GS4, N_G4, N_F4, N_D4, N_F4, N_G4, N_B3, N_B3, N_D5, N_A4, 0, N_GS4, N_G4, N_F4, N_D4, N_F4, N_G4, N_AS3, N_AS3, N_D5, N_A4, 0, N_GS4, N_G4, N_F4, N_D4, N_F4, N_G4, N_D4, N_D4, N_D5, N_A4, 0, N_GS4, N_G4, N_F4, N_D4, N_F4, N_G4, N_C4, N_C4, N_D5, N_A4, 0, N_GS4, N_G4, N_F4, N_D4, N_F4, N_G4, N_B3, N_B3, N_D5, N_A4, 0, N_GS4, N_G4, N_F4, N_D4, N_F4, N_G4, N_AS3, N_AS3, N_D5, N_A4, 0, N_GS4, N_G4, N_F4, N_D4, N_F4, N_G4, N_F4, N_F4, N_F4, N_F4, N_F4, N_D4, N_D4, N_D4, N_F4, N_F4, N_F4, N_G4, N_GS4, N_G4, N_F4, N_D4, N_F4, N_G4, 0, N_F4, N_F4, N_F4, N_G4, N_GS4, N_A4, N_C5, N_A4, N_D5, N_D5, N_D5, N_A4, N_D5, N_C5, N_F4, N_F4, N_F4, N_F4, N_F4, N_D4, N_D4, N_D4, N_F4, N_F4, N_F4, N_F4, N_D4, N_F4, N_E4, N_D4, N_C4, 0, N_G4, N_E4, N_D4, N_D4, N_D4, N_D4, N_F3, N_G3, N_AS3, N_C4, N_D4, N_F4, N_C5, 0, N_F4, N_D4, N_F4, N_G4, N_GS4, N_G4, N_F4, N_D4, N_GS4, N_G4, N_F4, N_D4, N_F4, N_F4, N_F4, N_GS4, N_A4, N_C5, N_A4, N_GS4, N_G4, N_F4, N_D4, N_E4, N_F4, N_G4, N_A4, N_C5, N_CS5, N_GS4, N_GS4, N_G4, N_F4, N_G4, N_F3, N_G3, N_A3, N_F4, N_E4, N_D4, N_E4, N_F4, N_G4, N_E4, N_A4, N_A4, N_G4, N_F4, N_DS4, N_CS4, N_DS4, 0, N_F4, N_D4, N_F4, N_G4, N_GS4, N_G4, N_F4, N_D4, N_GS4, N_G4, N_F4, N_D4, N_F4, N_F4, N_F4, N_GS4, N_A4, N_C5, N_A4, N_GS4, N_G4, N_F4, N_D4, N_E4, N_F4, N_G4, N_A4, N_C5, N_CS5, N_GS4, N_GS4, N_G4, N_F4, N_G4, N_F3, N_G3, N_A3, N_F4, N_E4, N_D4, N_E4, N_F4, N_G4, N_E4, N_A4, N_A4, N_G4, N_F4, N_DS4, N_CS4, N_DS4,
//};
//uint32_t megalovania_delays[] = {
//        120,120,240,320,60,240,240,240,120,120,120,120,120,240,320,60,240,240,240,120,120,120,120,120,240,320,60,240,240,240,120,120,120,120,120,240,320,60,240,240,240,120,120,120,120,120,240,320,60,240,240,240,120,120,120,120,120,240,320,60,240,240,240,120,120,120,120,120,240,320,60,240,240,240,120,120,120,120,120,240,320,60,240,240,240,120,120,120,120,120,240,320,60,240,240,240,120,120,120,120,120,240,320,60,240,240,240,120,120,120,120,120,240,320,60,240,240,240,120,120,120,120,120,240,320,60,240,240,240,120,120,120,120,120,240,320,60,240,240,240,120,120,120,120,120,240,320,60,240,240,240,120,120,120,120,120,240,320,60,240,240,240,120,120,120,120,120,240,320,60,240,240,240,120,120,120,240,120,240,240,240,240,480,120,240,120,240,240,240,120,120,120,120,120,240,240,120,240,240,240,240,240,240,240,240,120,120,120,960,240,120,240,240,240,240,480,120,240,120,240,240,240,240,240,120,240,120,240,240,240,240,240,240,240,120,240,128,240,240,960,640,120,120,120,120,120,120,120,120,120,120,120,120,240,960,120,240,120,240,120,120,120,120,120,120,240,240,240,240,240,240,120,120,120,960,240,240,240,240,480,480,480,480,480,480,960,240,240,240,240,960,960,640,120,120,120,120,120,120,120,120,120,120,120,120,240,960,120,240,120,240,120,120,120,120,120,120,240,240,240,240,240,240,120,120,120,960,240,240,240,240,480,480,480,480,480,480,960,240,240,240,240,960,1920
//};
//
//uint32_t zelda_melody[] = {
//        N_AS4, 0, 0, N_AS4, N_AS4, N_AS4, N_AS4, N_AS4, 0, N_GS4, N_AS4, 0, 0, N_AS4, N_AS4, N_AS4, N_AS4, N_AS4, 0, N_GS4, N_AS4, 0, 0, N_AS4, N_AS4, N_AS4, N_AS4, N_AS4, N_F3, N_F3, N_F3, N_F3, N_F3, N_F3, N_F3, N_F3, N_F3, N_F3, N_AS4, N_F3, N_F3, 0, N_AS4, N_AS4, N_C5, N_D5, N_DS5, N_F5, 0, N_F5, N_F5, N_FS5, N_GS5, N_AS5, 0, N_AS5, N_AS5, N_AS5, N_GS5, N_FS5, N_GS5, 0, N_FS5, N_F5, N_F5, N_DS5, N_DS5, N_F5, N_FS5, N_F5, N_DS5, N_CS5, N_CS5, N_DS5, N_F5, N_DS5, N_CS5, N_C5, N_C5, N_D5, N_E5, N_G5, N_F5, N_F3, N_F3, N_F3, N_F3, N_F3, N_F3, N_F3, N_F3, N_F3, N_F3, N_AS4, N_F3, N_F3, 0, N_AS4, N_AS4, N_C5, N_D5, N_DS5, N_F5, 0, N_F5, N_F5, N_FS5, N_GS5, N_AS5, 0, N_CS6, N_C6, N_A5, 0, N_F5, N_FS5, 0, N_AS5, N_A5, N_F5, 0, N_F5, N_FS5, 0, N_AS5, N_A5, N_F5, 0, N_D5, N_DS5, 0, N_FS5, N_F5, N_CS5, 0, N_AS4, N_C5, N_C5, N_D5, N_E5, 0, N_G5, N_F5, N_F3, N_F3, N_F3, N_F3, N_F3, N_F3, N_F3, N_F3, N_F3, N_F3, N_AS4, N_F3, N_F3, 0, N_AS4, N_AS4, N_C5, N_D5, N_DS5, N_F5, 0, N_F5, N_F5, N_FS5, N_GS5, N_AS5, 0, N_AS5, N_AS5, N_AS5, N_GS5, N_FS5, N_GS5, 0, N_FS5, N_F5, N_F5, N_DS5, N_DS5, N_F5, N_FS5, N_F5, N_DS5, N_CS5, N_CS5, N_DS5, N_F5, N_DS5, N_CS5, N_C5, N_C5, N_D5, N_E5, N_G5, N_F5, N_F3, N_F3, N_F3, N_F3, N_F3, N_F3, N_F3, N_F3, N_F3, N_F3, N_AS4, N_F3, N_F3, 0, N_AS4, N_AS4, N_C5, N_D5, N_DS5, N_F5, 0, N_F5, N_F5, N_FS5, N_GS5, N_AS5, 0, N_CS6, N_C6, N_A5, 0, N_F5, N_FS5, 0, N_AS5, N_A5, N_F5, 0, N_F5, N_FS5, 0, N_AS5, N_A5, N_F5, 0, N_D5, N_DS5, 0, N_FS5, N_F5, N_CS5, 0, N_AS4, N_C5, N_C5, N_D5, N_E5, 0, N_G5, N_F5, N_F3, N_F3, N_F3, N_F3, N_F3, N_F3, N_F3, N_F3, N_F3, N_F3
//};
//uint32_t zelda_delays[] = {
//        960,240,240,240,240,240,240,320,120,120,480,240,240,240,240,240,240,320,120,120,480,240,240,240,240,240,240,240,120,120,240,120,120,240,120,120,240,240,480,480,320,120,120,120,120,120,120,960,240,240,240,240,240,960,240,240,240,240,240,240,320,120,120,960,480,240,120,120,960,240,240,240,120,120,960,240,240,240,120,120,960,480,240,120,120,240,120,120,240,120,120,240,240,480,480,320,120,120,120,120,120,120,960,240,240,240,240,240,960,480,480,480,480,480,480,960,480,480,480,480,480,480,960,480,480,480,480,480,480,960,480,480,480,480,480,480,240,120,120,480,480,480,240,120,120,240,120,120,240,120,120,240,240,480,480,320,120,120,120,120,120,120,960,240,240,240,240,240,960,240,240,240,240,240,240,320,120,120,960,480,240,120,120,960,240,240,240,120,120,960,240,240,240,120,120,960,480,240,120,120,240,120,120,240,120,120,240,240,480,480,320,120,120,120,120,120,120,960,240,240,240,240,240,960,480,480,480,480,480,480,960,480,480,480,480,480,480,960,480,480,480,480,480,480,960,480,480,480,480,480,480,240,120,120,480,480,480,240,120,120,240,120,120,240,120,120,240,240
//};
//
//// Random.org
//uint32_t start_melody[] = {1861, 0, 3009, 0, 1950, 0, 2486, 0, 2826};
//uint32_t start_delays[] = {274, 60, 176, 60, 215, 60, 99, 60, 219};
//
//uint32_t stop_melody[] = {0};
//uint32_t stop_delays[] = {30};
//
//uint32_t simple_melody[] = {
//		  N_D4, N_G4, N_FS4, N_A4,
//		  N_G4, N_C5, N_AS4, N_A4,
//		  N_FS4, N_G4, N_A4, N_FS4, N_DS4, N_D4,
//		  N_C4, N_D4,0,
//
//		  N_D4, N_G4, N_FS4, N_A4,
//		  N_G4, N_C5, N_D5, N_C5, N_AS4, N_C5, N_AS4, N_A4,      //29               //8
//		  N_FS4, N_G4, N_A4, N_FS4, N_DS4, N_D4,
//		  N_C4, N_D4,0,
//
//		  N_D4, N_FS4, N_G4, N_A4, N_DS5, N_D5,
//		  N_C5, N_AS4, N_A4, N_C5,
//		  N_C4, N_D4, N_DS4, N_FS4, N_D5, N_C5,
//		  N_AS4, N_A4, N_C5, N_AS4,             //58
//
//		  N_D4, N_FS4, N_G4, N_A4, N_DS5, N_D5,
//		  N_C5, N_D5, N_C5, N_AS4, N_C5, N_AS4, N_A4, N_C5, N_G4,
//		  N_A4, 0, N_AS4, N_A4, 0, N_G4,
//		  N_G4, N_A4, N_G4, N_FS4, 0,
//
//		  N_C4, N_D4, N_G4, N_FS4, N_DS4,
//		  N_C4, N_D4, 0,
//		  N_C4, N_D4, N_G4, N_FS4, N_DS4,
//		  N_C4, N_D4
//};
//
//uint32_t simple_delays[] = {
//  240,480,240,480,
//  480,480,480,180,
//  480,480,480,480,480,480,
//  480,120,480,
//
//  240,480,240,480,
//  480,960,1920,1920,960,1920,1920,180,
//  480,480,480,480,480,480,
//  480,120,480,
//
//  480,480,480,480,480,480,
//  480,480,480,180,
//  480,480,480,480,480,480,
//  480,480,480,180,
//
//  480,480,480,480,480,480,
//  960,1920,1920,960,1920,1920,480,240,480,
//  960,360,480,920,360,480,
//  960,1920,1920,120,480,
//
//  480,240,480,480,480,
//  480,120,480,
//  480,240,480,480,480,
//  480,96
//};

#endif
